#summary BlueCove supported stacks.

= BlueCove supported stacks =

   If automatic Bluetooth Stack detection is not enough Java System property "bluecove.stack" can be used to force desired Stack Initialization. Values "widcomm", "bluesoleil" or "winsock".
   By defaut winsock is selected if avalable.

   WIDCOMM and BlueSoleil are added in BlueCove version 2.0.0. Your help is required to test and fix functionality.

   [http://code.google.com/p/bluecove/wiki/WindowsMobile Windows Mobile]

== Winsock (Microsoft) ==

=== Requirements ===

    * Microsoft Bluetooth stack (currently this means Windows XP SP2 or newer and Windows Mobile 2003 or newer)
    * A Bluetooth device supported by the Microsoft bluetooth stack

=== Limitations ===

    * Microsoft Bluetooth stack only supporting RFCOMM connections

== WIDCOMM (Broadcom) ==

    Broadcom wbtapi.dll required. It is installed with WIDCOMM drivers.
    ~~ Broadcom btwapi.dll required. If you have WIDCOMM version older than 5.1 you need to [http://bluecove.sourceforge.net/download/btwapi.dll download] and install this dll to %systemroot%\system32

=== JSR-82 Limitations ===

    * `ServiceRecord` attributes of `DataElement` types URL are discoved as STRING
    * `ServiceRecord` attributes of `DataElement` types INT_16 are truncated in discovery (May be you can help fixing this)
    * `DiscoveryAgent.searchServices(.. UUID[] uuidSet, ..)` only ONE UUID is used during search, the last one in array.

== BlueSoleil (IVT Corporation) ==

=== JSR-82 Limitations ===

    * Service attributes are not supported, `LocalDevice.getProperty("bluetooth.sd.attr.retrievable.max") == "0"`
    * `DiscoveryAgent.searchServices()` can only find 128bits-GUID service with specific UUID. You can't list all service on remote device.
    * `DiscoveryAgent.searchServices(.. UUID[] uuidSet, ..)`  only ONE UUID is used during search, the last one in array.
    * You need to run `DiscoveryAgent.searchServices()` with UUID of your service before you can make connection to it using `Connector.open("btspp://...");`
    * Client `Connector.open()` use GUID of the discovered service. Only one would be selected
    * In our test lab we can only make 180 connections in sequence. After this Windows needs to be rebooted (May be you can help fixing this)